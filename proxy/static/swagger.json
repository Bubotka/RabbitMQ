{
  "consumes": [
    "application/json",
    "multipart/form-..database"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Documentation of your project API.",
    "title": "infoblog.",
    "version": "1.0.0"
  },
  "basePath": "/",
  "paths": {
    "/api/address/geocode": {
      "post": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "geo"
        ],
        "summary": "Определение адреса на основе широты и долготы.",
        "operationId": "geoRequest",
        "parameters": [
          {
            "example": "{\"lat\":\"59.948474778247544\",\"lng\":\"30.296516418457035\"}",
            "description": "Coordinates - кординаты на карте",
            "name": "Coordinates",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/geolocationResponse"
          }
        }
      }
    },
    "/api/address/search": {
      "post": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "geo"
        ],
        "summary": "Поиск адресов на основе запроса адреса.",
        "operationId": "searchRequest",
        "parameters": [
          {
            "example": "{\"query\": \"Москва\"}",
            "description": "Query - поисковой запрос адреса",
            "name": "Query",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/searchResponse"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Авторизация пользователя.",
        "operationId": "loginRequest",
        "parameters": [
          {
            "example": "{\"username\":\"Kolia\",\"password\":\"123\"}",
            "description": "Userdata - данные пользователя",
            "name": "Userdata",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/loginResponse"
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Регистрация пользователя.",
        "operationId": "registerRequest",
        "parameters": [
          {
            "example": "{\"username\":\"Kolia\",\"password\":\"123\"}",
            "description": "Userdata - данные пользователя",
            "name": "Userdata",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/registerResponse"
          }
        }
      }
    },
    "/api/user/list": {
      "get": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "user"
        ],
        "summary": "Все пользователи.",
        "operationId": "ListRequest",
        "responses": {
          "200": {
            "$ref": "#/responses/ListResponseDock"
          }
        }
      }
    },
    "/api/user/profile/{username}": {
      "get": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "user"
        ],
        "summary": "Инфа о пользователе.",
        "operationId": "ProfileRequest",
        "parameters": [
          {
            "type": "string",
            "description": "Username - имя пользователя",
            "name": "Username",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ProfileResponse"
          }
        }
      }
    }
  },
  "definitions": {
    "AddressElementSearch": {
      "type": "object",
      "properties": {
        "lat": {
          "type": "string",
          "x-go-name": "GeoLat"
        },
        "lon": {
          "type": "string",
          "x-go-name": "GeoLon"
        },
        "result": {
          "type": "string",
          "x-go-name": "Result"
        }
      },
      "x-go-package": "github.com/Bubotka/Microservices/proxy/internal/models"
    },
    "AddressSearchReworked": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/AddressElementSearch"
      },
      "x-go-package": "github.com/Bubotka/Microservices/proxy/internal/models"
    },
    "ListResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User"
          },
          "x-go-name": "Users"
        }
      },
      "x-go-package": "github.com/Bubotka/Microservices/proxy/internal/modules/user/controller"
    },
    "User": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "IsDelete": {
          "type": "boolean"
        },
        "Password": {
          "type": "string"
        },
        "Username": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/Bubotka/Microservices/user/domain/models"
    }
  },
  "responses": {
    "ListResponseDock": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/ListResponse"
      }
    },
    "ProfileResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/User"
      }
    },
    "geolocationResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/AddressSearchReworked"
      }
    },
    "loginResponse": {
      "description": ""
    },
    "registerResponse": {
      "description": ""
    },
    "searchResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/AddressSearchReworked"
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}